# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\Example\:
        resource: '../src/Example'
        exclude: '../src/Example/{Entity,Dto,Request}'

    App\User\:
        resource: '../src/User'
        exclude: '../src/User/{Entity,Dto,Request}'

    App\Documentation\:
        resource: '../src/Documentation'
        exclude: '../src/Documentation/{Entity,Dto,Request}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Example\Controller\:
        resource: '../src/Example/Controller'
        tags: ['controller.service_arguments']

    App\User\Controller\:
        resource: '../src/User/Controller'
        tags: ['controller.service_arguments']

    App\Documentation\Controller\:
        resource: '../src/Documentation/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Infra\Request\RequestObjectResolver:
        autowire: true
        tags:
            - { name: controller.argument_value_resolver, priority: 50 }

    App\Infra\EventListener\ApiExceptionSubscriber:
        autowire: true
        lazy: true
        tags:
            - { name: kernel.event_subscriber, event: kernel.exception, priority: -10000 }

    Lexik\Bundle\JWTAuthenticationBundle\Encoder\LcobucciJWTEncoder:
        alias: 'lexik_jwt_authentication.encoder.lcobucci'
        public: true

    App\Infra\Response\FractalSerializer:
        autowire: true

    SamJ\FractalBundle\ContainerAwareManager:
        public: true
        calls:
            - [setSerializer, ['@App\Infra\Response\FractalSerializer']]
            - [setContainer, ['@service_container']]
